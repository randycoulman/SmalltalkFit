<?xml version="1.0"?><st-source><!-- Name: FixtureGallery-FixturesNotice:                     GNU GENERAL PUBLIC LICENSE                       Version 2, June 1991 Copyright (C) 1989, 1991 Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.                            Preamble  The licenses for most software are designed to take away yourfreedom to share and change it.  By contrast, the GNU General PublicLicense is intended to guarantee your freedom to share and change freesoftware- to make sure the software is free for all its users.  ThisGeneral Public License applies to most of the Free SoftwareFoundation's software and to any other program whose authors commit tousing it.  (Some other Free Software Foundation software is covered bythe GNU Lesser General Public License instead.)  You can apply it toyour programs, too.  When we speak of free software, we are referring to freedom, notprice.  Our General Public Licenses are designed to make sure that youhave the freedom to distribute copies of free software (and charge forthis service if you wish), that you receive source code or can get itif you want it, that you can change the software or use pieces of itin new free programs; and that you know you can do these things.  To protect your rights, we need to make restrictions that forbidanyone to deny you these rights or to ask you to surrender the rights.These restrictions translate to certain responsibilities for you if youdistribute copies of the software, or if you modify it.  For example, if you distribute copies of such a program, whethergratis or for a fee, you must give the recipients all the rights thatyou have.  You must make sure that they, too, receive or can get thesource code.  And you must show them these terms so they know theirrights.  We protect your rights with two steps: (1) copyright the software, and(2) offer you this license which gives you legal permission to copy,distribute and/or modify the software.  Also, for each author's protection and ours, we want to make certainthat everyone understands that there is no warranty for this freesoftware.  If the software is modified by someone else and passed on, wewant its recipients to know that what they have is not the original, sothat any problems introduced by others will not reflect on the originalauthors' reputations.  Finally, any free program is threatened constantly by softwarepatents.  We wish to avoid the danger that redistributors of a freeprogram will individually obtain patent licenses, in effect making theprogram proprietary.  To prevent this, we have made it clear that anypatent must be licensed for everyone's free use or not licensed at all.  The precise terms and conditions for copying, distribution andmodification follow.                    GNU GENERAL PUBLIC LICENSE   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION  0. This License applies to any program or other work which containsa notice placed by the copyright holder saying it may be distributedunder the terms of this General Public License.  The "Program", below,refers to any such program or work, and a "work based on the Program"means either the Program or any derivative work under copyright law:that is to say, a work containing the Program or a portion of it,either verbatim or with modifications and/or translated into anotherlanguage.  (Hereinafter, translation is included without limitation inthe term "modification".)  Each licensee is addressed as "you".Activities other than copying, distribution and modification are notcovered by this License; they are outside its scope.  The act ofrunning the Program is not restricted, and the output from the Programis covered only if its contents constitute a work based on theProgram (independent of having been made by running the Program).Whether that is true depends on what the Program does.  1. You may copy and distribute verbatim copies of the Program'ssource code as you receive it, in any medium, provided that youconspicuously and appropriately publish on each copy an appropriatecopyright notice and disclaimer of warranty; keep intact all thenotices that refer to this License and to the absence of any warranty;and give any other recipients of the Program a copy of this Licensealong with the Program.You may charge a fee for the physical act of transferring a copy, andyou may at your option offer warranty protection in exchange for a fee.  2. You may modify your copy or copies of the Program or any portionof it, thus forming a work based on the Program, and copy anddistribute such modifications or work under the terms of Section 1above, provided that you also meet all of these conditions:    a) You must cause the modified files to carry prominent notices    stating that you changed the files and the date of any change.    b) You must cause any work that you distribute or publish, that in    whole or in part contains or is derived from the Program or any    part thereof, to be licensed as a whole at no charge to all third    parties under the terms of this License.    c) If the modified program normally reads commands interactively    when run, you must cause it, when started running for such    interactive use in the most ordinary way, to print or display an    announcement including an appropriate copyright notice and a    notice that there is no warranty (or else, saying that you provide    a warranty) and that users may redistribute the program under    these conditions, and telling the user how to view a copy of this    License.  (Exception: if the Program itself is interactive but    does not normally print such an announcement, your work based on    the Program is not required to print an announcement.)These requirements apply to the modified work as a whole.  Ifidentifiable sections of that work are not derived from the Program,and can be reasonably considered independent and separate works inthemselves, then this License, and its terms, do not apply to thosesections when you distribute them as separate works.  But when youdistribute the same sections as part of a whole which is a work basedon the Program, the distribution of the whole must be on the terms ofthis License, whose permissions for other licensees extend to theentire whole, and thus to each and every part regardless of who wrote it.Thus, it is not the intent of this section to claim rights or contestyour rights to work written entirely by you; rather, the intent is toexercise the right to control the distribution of derivative orcollective works based on the Program.In addition, mere aggregation of another work not based on the Programwith the Program (or with a work based on the Program) on a volume ofa storage or distribution medium does not bring the other work underthe scope of this License.  3. You may copy and distribute the Program (or a work based on it,under Section 2) in object code or executable form under the terms ofSections 1 and 2 above provided that you also do one of the following:    a) Accompany it with the complete corresponding machine-readable    source code, which must be distributed under the terms of Sections    1 and 2 above on a medium customarily used for software interchange; or,    b) Accompany it with a written offer, valid for at least three    years, to give any third party, for a charge no more than your    cost of physically performing source distribution, a complete    machine-readable copy of the corresponding source code, to be    distributed under the terms of Sections 1 and 2 above on a medium    customarily used for software interchange; or,    c) Accompany it with the information you received as to the offer    to distribute corresponding source code.  (This alternative is    allowed only for noncommercial distribution and only if you    received the program in object code or executable form with such    an offer, in accord with Subsection b above.)The source code for a work means the preferred form of the work formaking modifications to it.  For an executable work, complete sourcecode means all the source code for all modules it contains, plus anyassociated interface definition files, plus the scripts used tocontrol compilation and installation of the executable.  However, as aspecial exception, the source code distributed need not includeanything that is normally distributed (in either source or binaryform) with the major components (compiler, kernel, and so on) of theoperating system on which the executable runs, unless that componentitself accompanies the executable.If distribution of executable or object code is made by offeringaccess to copy from a designated place, then offering equivalentaccess to copy the source code from the same place counts asdistribution of the source code, even though third parties are notcompelled to copy the source along with the object code.  4. You may not copy, modify, sublicense, or distribute the Programexcept as expressly provided under this License.  Any attemptotherwise to copy, modify, sublicense or distribute the Program isvoid, and will automatically terminate your rights under this License.However, parties who have received copies, or rights, from you underthis License will not have their licenses terminated so long as suchparties remain in full compliance.  5. You are not required to accept this License, since you have notsigned it.  However, nothing else grants you permission to modify ordistribute the Program or its derivative works.  These actions areprohibited by law if you do not accept this License.  Therefore, bymodifying or distributing the Program (or any work based on theProgram), you indicate your acceptance of this License to do so, andall its terms and conditions for copying, distributing or modifyingthe Program or works based on it.  6. Each time you redistribute the Program (or any work based on theProgram), the recipient automatically receives a license from theoriginal licensor to copy, distribute or modify the Program subject tothese terms and conditions.  You may not impose any furtherrestrictions on the recipients' exercise of the rights granted herein.You are not responsible for enforcing compliance by third parties tothis License.  7. If, as a consequence of a court judgment or allegation of patentinfringement or for any other reason (not limited to patent issues),conditions are imposed on you (whether by court order, agreement orotherwise) that contradict the conditions of this License, they do notexcuse you from the conditions of this License.  If you cannotdistribute so as to satisfy simultaneously your obligations under thisLicense and any other pertinent obligations, then as a consequence youmay not distribute the Program at all.  For example, if a patentlicense would not permit royalty-free redistribution of the Program byall those who receive copies directly or indirectly through you, thenthe only way you could satisfy both it and this License would be torefrain entirely from distribution of the Program.If any portion of this section is held invalid or unenforceable underany particular circumstance, the balance of the section is intended toapply and the section as a whole is intended to apply in othercircumstances.It is not the purpose of this section to induce you to infringe anypatents or other property right claims or to contest validity of anysuch claims; this section has the sole purpose of protecting theintegrity of the free software distribution system, which isimplemented by public license practices.  Many people have madegenerous contributions to the wide range of software distributedthrough that system in reliance on consistent application of thatsystem; it is up to the author/donor to decide if he or she is willingto distribute software through any other system and a licensee cannotimpose that choice.This section is intended to make thoroughly clear what is believed tobe a consequence of the rest of this License.  8. If the distribution and/or use of the Program is restricted incertain countries either by patents or by copyrighted interfaces, theoriginal copyright holder who places the Program under this Licensemay add an explicit geographical distribution limitation excludingthose countries, so that distribution is permitted only in or amongcountries not thus excluded.  In such case, this License incorporatesthe limitation as if written in the body of this License.  9. The Free Software Foundation may publish revised and/or new versionsof the General Public License from time to time.  Such new versions willbe similar in spirit to the present version, but may differ in detail toaddress new problems or concerns.Each version is given a distinguishing version number.  If the Programspecifies a version number of this License which applies to it and "anylater version", you have the option of following the terms and conditionseither of that version or of any later version published by the FreeSoftware Foundation.  If the Program does not specify a version number ofthis License, you may choose any version ever published by the Free SoftwareFoundation.  10. If you wish to incorporate parts of the Program into other freeprograms whose distribution conditions are different, write to the authorto ask for permission.  For software which is copyrighted by the FreeSoftware Foundation, write to the Free Software Foundation; we sometimesmake exceptions for this.  Our decision will be guided by the two goalsof preserving the free status of all derivatives of our free software andof promoting the sharing and reuse of software generally.                            NO WARRANTY  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTYFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHENOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIESPROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSEDOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OFMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK ASTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THEPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,REPAIR OR CORRECTION.  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITINGWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/ORREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISINGOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITEDTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BYYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHERPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THEPOSSIBILITY OF SUCH DAMAGES.                     END OF TERMS AND CONDITIONS            How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatestpossible use to the public, the best way to achieve this is to make itfree software which everyone can redistribute and change under these terms.  To do so, attach the following notices to the program.  It is safestto attach them to the start of each source file to most effectivelyconvey the exclusion of warranty; and each file should have at leastthe "copyright" line and a pointer to where the full notice is found.    <one line to give the program's name and a brief idea of what it does.>    Copyright (C) <year>  <name of author>    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License along    with this program; if not, write to the Free Software Foundation, Inc.,    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.Also add information on how to contact you by electronic and paper mail.If the program is interactive, make it output a short notice like thiswhen it starts in an interactive mode:    Gnomovision version 69, Copyright (C) year name of author    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.    This is free software, and you are welcome to redistribute it    under certain conditions; type `show c' for details.The hypothetical commands `show w' and `show c' should show the appropriateparts of the General Public License.  Of course, the commands you use maybe called something other than `show w' and `show c'; they could even bemouse-clicks or menu items- whatever suits your program.You should also get your employer (if you work as a programmer) or yourschool, if any, to sign a "copyright disclaimer" for the program, ifnecessary.  Here is a sample; alter the names:  Yoyodyne, Inc., hereby disclaims all copyright interest in the program  `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989  Ty Coon, President of ViceThis General Public License does not permit incorporating your program intoproprietary programs.  If your program is a subroutine library, you mayconsider it more useful to permit linking proprietary applications with thelibrary.  If this is what you want to do, use the GNU Lesser GeneralPublic License instead of this License.Comment: This package contains the fixture code for the examples in Gojko Adzic's [Fixture Gallery](http://gojko.net/fitnesse/fixturegallery).# Smalltalk FitSmalltalk Fit is a Smalltalk implementation of Ward Cunningham's [Framework for Integrated Tests](http://fit.c2.com), [Fitnesse](http://www.fitnesse.org), and Rick Mugridge's [FitLibrary](http://fitlibrary.sourceforge.net).This version contains the equivalent features of:* fit-java-1.1* fitnesse-20121220* FitLibrary-2.0   Copyright (C) 2004-2013 Randy Coulman    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation; either version 2 of the License, or    (at your option) any later version.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License along    with this program; if not, write to the Free Software Foundation, Inc.,    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.See the copyright tab in the RB, the 'notice' property of this package, or the License.txt file on GitHub.DbIdentifier: /Users/randy/repositories/store/RCSmalltalkDbTrace: 1537DbUsername: randyDbVersion: 9DevelopmentPrerequisites: #(#(#any 'Base VisualWorks' '') #(#any 'Fit' '') #(#any 'FitLibrary' '') #(#any 'FixtureGallery-DomainCode' ''))IgnoredPrerequisites: #()PackageName: FixtureGallery-FixturesParcel: #('FixtureGallery-Fixtures')PrerequisiteDescriptions: #(#(#name 'Base VisualWorks' #componentType #bundle) #(#name 'Fit') #(#name 'FitLibrary' #componentType #package) #(#name 'FixtureGallery-DomainCode'))PrerequisiteParcels: #(#('Base VisualWorks' '') #('Fit' '') #('FitLibrary' '') #('FixtureGallery-DomainCode' ''))PrintStringCache: (9,randy)Version: 9Date: 7:21:07 AM May 24, 2013 --><time-stamp>From VisualWorks® Personal Use Edition, 7.9.1 of October 18, 2012 on May 24, 2013 at 7:21:07 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SequenceFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.SequenceFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars>letters </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>SystemUnderTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.DoFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars>queue </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>RowFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fit.RowFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>ConstraintFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.ConstraintFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>CombinationFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.CombinationFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>TableFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitnesse.Fixtures.TableFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>ActionFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fit.Fixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars>first second both </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>SymbolsTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.SequenceFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>DoFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.DoFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars>letters </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>ColumnFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fit.ColumnFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars>firstPart secondPart </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>ArgumentsTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.SetFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>ArrayFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.ArrayFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>DoFixtureFlowTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.DoFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>SetUpFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.SetUpFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>Word</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>word </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><class><name>CalculateFixtureTest</name><environment>Info.Fitnesse.Fixturegallery</environment><super>Fitlibrary.CalculateFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FixtureGallery-Fixtures</package></attributes></class><methods><class-id>Info.Fitnesse.Fixturegallery.SystemUnderTest</class-id> <category>initialize-release</category><body package="FixtureGallery-Fixtures">initialize	super initialize.	queue := Queue new.	self systemUnderTest: queue</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.RowFixtureTest</class-id> <category>abstracts</category><body package="FixtureGallery-Fixtures">query	^Player players</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.RowFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">targetClass	^Player</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.TableFixtureTest</class-id> <category>enumerating</category><body package="FixtureGallery-Fixtures">doStaticTable: anInteger	| taxCalculator totalTax taxCell taxInTable |	taxCalculator := TaxCalculator new.	totalTax := 0.	2		to: anInteger - 4		do:			[:row | 			totalTax := totalTax				+					(taxCalculator						taxOn: (self textAt: 3 @ row) asNumber						forCode: (self textAt: 2 @ row))].	taxCell := 3 @ (anInteger - 1).	taxInTable := (self textAt: taxCell) asNumber.	(taxInTable - totalTax) abs &lt; 0.005		ifTrue: [self rightAt: taxCell]		ifFalse:			[self				wrongAt: taxCell				actual: totalTax printString]</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.ActionFixtureTest</class-id> <category>actions</category><body package="FixtureGallery-Fixtures">join	both := first , ', ' , second</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.ArgumentsTest</class-id> <category>enumerating</category><body package="FixtureGallery-Fixtures">doTableNode: aTableNode	| set |	set := Set new.	arguments		do:			[:each | 			(each tokensBasedOn: Character space)				do: [:eachWord | set add: (Word word: eachWord)]].	self actualCollection: set.	super doTableNode: aTableNode</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.ArgumentsTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">interpretAfterFirstRow: aTable resultsInto: aTestResults	| set |	set := Set new.	arguments do: 			[:each |			(each tokensBasedOn: Character space)				do: [:eachWord | set add: (Word word: eachWord)]].	self actualCollection: set.	super interpretAfterFirstRow: aTable resultsInto: aTestResults</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.ArrayFixtureTest</class-id> <category>initialize-release</category><body package="FixtureGallery-Fixtures">initialize	super initialize.	self actualCollection: Player players</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.SetUpFixtureTest</class-id> <category>initialize-release</category><body package="FixtureGallery-Fixtures">initialize	super initialize.	Player clearPlayers</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.Word class</class-id> <category>instance creation</category><body package="FixtureGallery-Fixtures">word: aString	^self new word: aString</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.SequenceFixtureTest</class-id> <category>actions</category><body package="FixtureGallery-Fixtures">fill: anInteger _: aCharacter	&lt;fitTakes: #(#Integer #Character)&gt;	letters := String new: anInteger withAll: aCharacter</body><body package="FixtureGallery-Fixtures">setList: anArray	&lt;fitTakes: #(#( #Character ))&gt;	letters := String withAll: anArray</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.SequenceFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">charAt: anInteger	&lt;fitTakes: #Integer&gt;	&lt;fitReturns: #Character&gt;	^letters at: anInteger + 1</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.SystemUnderTest</class-id> <category>actions</category><body package="FixtureGallery-Fixtures">generateMessages: anInteger	&lt;fitTakes: #Integer&gt;	0 to: anInteger - 1 do: [:i | queue enqueue: 'M' , i printString]</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.ConstraintFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">firstPart: aInteger secondPart: bInteger	&lt;fitTakes: #(#Integer #Integer)&gt;	&lt;fitReturns: #Boolean&gt;	^aInteger &lt; bInteger</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.CombinationFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">combine: aInteger and: bInteger	&lt;fitTakes: #(#Integer #Integer)&gt;	&lt;fitReturns: #Integer&gt;	^aInteger // bInteger</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.ActionFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">firstPart: aString	&lt;fitTakes: #String&gt;	first := aString</body><body package="FixtureGallery-Fixtures">secondPart: aString	&lt;fitTakes: #String&gt;	second := aString</body><body package="FixtureGallery-Fixtures">together	&lt;fitReturns: #String&gt;	^both</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.SymbolsTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">setSymbolValue: nameString _: valueString	&lt;fitTakes: #(#String #String)&gt;	Fixture symbolAt: nameString put: valueString</body><body package="FixtureGallery-Fixtures">symbolValue: aString	&lt;fitTakes: #String&gt;	&lt;fitReturns: #String&gt;	^Fixture symbolAt: aString</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.DoFixtureTest</class-id> <category>actions</category><body package="FixtureGallery-Fixtures">fill: anInteger timesWith: aCharacter	&lt;fitTakes: #(#Integer #Character)&gt;	letters := String new: anInteger withAll: aCharacter</body><body package="FixtureGallery-Fixtures">setList: anArray	&lt;fitTakes: #(#( #Character ))&gt;	letters := String withAll: anArray</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.DoFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">charAt: anInteger	&lt;fitTakes: #Integer&gt;	&lt;fitReturns: #Character&gt;	^letters at: anInteger + 1</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.ColumnFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">firstPart: aString	&lt;fitTakes: #String&gt;	firstPart := aString</body><body package="FixtureGallery-Fixtures">secondPart: aString	&lt;fitTakes: #String&gt;	secondPart := aString</body><body package="FixtureGallery-Fixtures">together	&lt;fitReturns: #String&gt;	^firstPart , ', ' , secondPart</body><body package="FixtureGallery-Fixtures">totalLength	&lt;fitReturns: #Number&gt;	^firstPart size + secondPart size</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.DoFixtureFlowTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">listPlayers	&lt;fitReturns: #Fixture&gt;	^ArrayFixture actuals: Player players</body><body package="FixtureGallery-Fixtures">preparePlayers	&lt;fitReturns: #Fixture&gt;	^SetUpFixtureTest new</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.SetUpFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">player: nameString postCode: postCodeString balance: aNumber	&lt;fitTakes: #(#String #String #Number)&gt;	Player addPlayerNamed: nameString postCode: postCodeString balance: aNumber</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.Word</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">word	&lt;fitReturns: #String&gt;	^word</body><body package="FixtureGallery-Fixtures">word: aString	&lt;fitTakes: #String&gt;	word := aString</body></methods><methods><class-id>Info.Fitnesse.Fixturegallery.CalculateFixtureTest</class-id> <category>accessing</category><body package="FixtureGallery-Fixtures">togetherFirstPart: firstString secondPart: secondString	&lt;fitTakes: #(#String #String)&gt;	&lt;fitReturns: #String&gt;	^firstString , ', ' , secondString</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>Fixture</name><environment>Fit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>counts summary arguments listener </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Fit Framework</category><attributes><package>Fit</package></attributes></class><class><name>SetFixture</name><environment>Fitlibrary</environment><super>Fitlibrary.CollectionFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FitLibrary</package></attributes></class><class><name>ColumnFixture</name><environment>Fit</environment><super>Fit.Fixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars>columnBindings hasExecuted </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Fit Framework</category><attributes><package>Fit</package></attributes></class><class><name>RowFixture</name><environment>Fit</environment><super>Fit.ColumnFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars>results missing surplus </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Fit Framework</category><attributes><package>Fit</package></attributes></class><class><name>CalculateFixture</name><environment>Fitlibrary</environment><super>Fitlibrary.FunctionFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FitLibrary</package></attributes></class><class><name>DoFixture</name><environment>Fitlibrary</environment><super>Fitlibrary.FitLibraryFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FitLibrary</package></attributes></class><class><name>SetUpFixture</name><environment>Fitlibrary</environment><super>Fitlibrary.DoFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FitLibrary</package></attributes></class><class><name>ConstraintFixture</name><environment>Fitlibrary</environment><super>Fitlibrary.FunctionFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FitLibrary</package></attributes></class><class><name>ArrayFixture</name><environment>Fitlibrary</environment><super>Fitlibrary.CollectionFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FitLibrary</package></attributes></class><class><name>CombinationFixture</name><environment>Fitlibrary</environment><super>Fitlibrary.FunctionFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FitLibrary</package></attributes></class><class><name>TableFixture</name><environment>Fitnesse.Fixtures</environment><super>Fit.Fixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars>firstRow </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Fit</category><attributes><package>Fit</package></attributes></class><class><name>SequenceFixture</name><environment>Fitlibrary</environment><super>Fitlibrary.DoFixture</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>FitLibrary</package></attributes></class></st-source>